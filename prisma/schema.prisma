// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model Book {
  id           String   @id @default(uuid())
  title        String
  author       String
  isbn         String?  @unique
  description  String?
  publisher    String?
  publishedAt  DateTime?
  category     String?
  thumbnail_link String?

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Purchase     Purchase[]
}

model User {
  id           String   @id @default(uuid())
  name        String
  email       String   @unique
  password  String?
  budget    Float?

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Purchase     Purchase[]
  PurchaseHistory PurchaseHistory[]
}

model Purchase {
  id           String   @id @default(uuid())
  bookId       String 
  userId       String
  price        Float
  status       Int
  comment      String?
  purchasedAt  DateTime?

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Book         Book     @relation(fields: [bookId], references: [id])
  User         User     @relation(fields: [userId], references: [id])
  PurchaseHistory PurchaseHistory[]
}

model PurchaseHistory {
  id           String   @id @default(uuid())
  purchaseId   String
  userId       String
  description  String?
  operation    Int

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  Purchase     Purchase @relation(fields: [purchaseId], references: [id])
  User         User     @relation(fields: [userId], references: [id])
}